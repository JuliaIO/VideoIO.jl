function _precompile_()
    ccall(:jl_generating_output, Cint, ()) == 1 || return nothing
    isdefined(VideoIO.AVCodecs, Symbol("#1#2")) && precompile(Tuple{getfield(VideoIO.AVCodecs, Symbol("#1#2")),Type{T} where T})
    isdefined(VideoIO.AVUtil, Symbol("#1#2")) && precompile(Tuple{getfield(VideoIO.AVUtil, Symbol("#1#2")),Type{T} where T})
    precompile(Tuple{Core.kwftype(typeof(VideoIO.encodevideo)),NamedTuple{(:framerate, :AVCodecContextProperties, :silent),Tuple{Int64,Array{Pair{Symbol,Tuple{Pair{String,String},Pair{String,String}}},1},Bool}},typeof(encodevideo),String,Array{Array{UInt8,2},1}})
    precompile(Tuple{Core.kwftype(typeof(VideoIO.openvideo)),NamedTuple{(:target_format,),Tuple{Int32}},typeof(openvideo),String})
    precompile(Tuple{Core.kwftype(typeof(VideoIO.prepareencoder)),NamedTuple{(:codec_name, :framerate, :AVCodecContextProperties),Tuple{String,Int64,Array{Pair{Symbol,Any},1}}},typeof(prepareencoder),Array{UInt8,2}})
    precompile(Tuple{Type{VideoIO.AVCodecs.AVPacket},Ptr{Nothing},Int64,Int64,Ptr{Nothing},Int32,Int32,Int32,Ptr{Nothing},Int32,Int64,Int64,Int64})
    precompile(Tuple{Type{VideoIO.AVInput{IOStream}},IOStream,Array{Ptr{VideoIO.AVFormat.AVFormatContext},1},Array{Ptr{VideoIO.AVFormat.AVIOContext},1},Int64,Array{VideoIO.AVCodecs.AVPacket,1},Array{VideoIO.StreamInfo,1},Array{VideoIO.StreamInfo,1},Array{VideoIO.StreamInfo,1},Array{VideoIO.StreamInfo,1},Array{VideoIO.StreamInfo,1},Array{VideoIO.StreamInfo,1},Set{Int64},Array{VideoIO.StreamContext,1},Bool})
    precompile(Tuple{Type{VideoIO.AVInput{String}},String,Array{Ptr{VideoIO.AVFormat.AVFormatContext},1},Array{Ptr{VideoIO.AVFormat.AVIOContext},1},Int64,Array{VideoIO.AVCodecs.AVPacket,1},Array{VideoIO.StreamInfo,1},Array{VideoIO.StreamInfo,1},Array{VideoIO.StreamInfo,1},Array{VideoIO.StreamInfo,1},Array{VideoIO.StreamInfo,1},Array{VideoIO.StreamInfo,1},Set{Int64},Array{VideoIO.StreamContext,1},Bool})
    precompile(Tuple{Type{VideoIO.AVUtil.AVFrame},NTuple{8,Ptr{Nothing}},NTuple{8,Int32},Ptr{Nothing},Int32,Int32,Int32,Int32,Int32,UInt32,VideoIO.AVUtil.AVRational,Int64,Int64,Int64,Int32,Int32,Int32,Ptr{Nothing},NTuple{8,UInt64},Int32,Int32,Int32,Int32,Int64,Int32,UInt64,NTuple{8,Ptr{Nothing}},Ptr{Nothing},Int32,Ptr{Nothing},Int32,Int32,UInt32,UInt32,UInt32,UInt32,UInt32,Int64,Int64,Int64,Ptr{Nothing},Int32,Int32,Int32,Ptr{Nothing},Int32,Int32,Ptr{Nothing},Ptr{Nothing},Ptr{Nothing},UInt64,UInt64,UInt64,UInt64,Ptr{Nothing}})
    precompile(Tuple{Type{VideoIO.VideoReader{true}},VideoIO.AVInput{IOStream},VideoIO.StreamInfo,Int64,Ptr{VideoIO.AVCodecs.AVCodecContext},Ptr{VideoIO.AVCodecs.AVCodec},Array{VideoIO.AVUtil.AVFrame,1},Array{Int32,1},Int32,Int32,Int32,Rational{Int32},Rational{Int32},Array{Array{UInt8,1},1},VideoIO.VideoTranscodeContext})
    precompile(Tuple{Type{VideoIO.VideoReader{true}},VideoIO.AVInput{String},VideoIO.StreamInfo,Int64,Ptr{VideoIO.AVCodecs.AVCodecContext},Ptr{VideoIO.AVCodecs.AVCodec},Array{VideoIO.AVUtil.AVFrame,1},Array{Int32,1},Int32,Int32,Int32,Rational{Int32},Rational{Int32},Array{Array{UInt8,1},1},VideoIO.VideoTranscodeContext})
    precompile(Tuple{typeof(Base.allocatedinline),Type{Ptr{VideoIO.AVUtil.AVDictionary}}})
    precompile(Tuple{typeof(Core.Compiler.eltype),Type{Array{Array{VideoIO.StreamInfo,1},1}}})
    precompile(Tuple{typeof(VideoIO.AVUtil.av_dict_set),Base.RefValue{Ptr{VideoIO.AVUtil.AVDictionary}},String,String,Int64})
    precompile(Tuple{typeof(VideoIO.TestVideos.available)})
    precompile(Tuple{typeof(VideoIO.TestVideos.download_all)})
    precompile(Tuple{typeof(VideoIO._close),VideoIO.VideoReader{true}})
    precompile(Tuple{typeof(VideoIO.aspect_ratio),VideoIO.VideoReader{true}})
    precompile(Tuple{typeof(VideoIO.decode_packet),VideoIO.VideoReader{true},Array{VideoIO.AVCodecs.AVPacket,1}})
    precompile(Tuple{typeof(VideoIO.get_duration),String})
    precompile(Tuple{typeof(VideoIO.get_start_time),String})
    precompile(Tuple{typeof(VideoIO.get_time_duration),String})
    precompile(Tuple{typeof(close),VideoIO.AVInput{IOStream}})
    precompile(Tuple{typeof(close),VideoIO.AVInput{String}})
    precompile(Tuple{typeof(close),VideoIO.VideoReader{true}})
    precompile(Tuple{typeof(convert),Type{Ptr{Int32}},Ptr{VideoIO.AVCodecs.AVCodecContext}})
    precompile(Tuple{typeof(convert),Type{Ptr{Int32}},Ptr{VideoIO.AVUtil.AVFrame}})
    precompile(Tuple{typeof(convert),Type{Ptr{Int64}},Ptr{VideoIO.AVUtil.AVFrame}})
    precompile(Tuple{typeof(convert),Type{Ptr{Ptr{VideoIO.AVFormat.AVIOContext}}},Ptr{VideoIO.AVFormat.AVFormatContext}})
    precompile(Tuple{typeof(convert),Type{Ptr{UInt32}},Ptr{VideoIO.AVCodecs.AVCodecContext}})
    precompile(Tuple{typeof(convert),Type{Ptr{VideoIO.AVUtil.AVRational}},Ptr{VideoIO.AVCodecs.AVCodecContext}})
    precompile(Tuple{typeof(eof),VideoIO.AVInput{IOStream}})
    precompile(Tuple{typeof(eof),VideoIO.AVInput{String}})
    precompile(Tuple{typeof(eof),VideoIO.VideoReader{true}})
    precompile(Tuple{typeof(getindex),Array{VideoIO.StreamContext,1},Int64})
    precompile(Tuple{typeof(gettime),VideoIO.VideoReader{true}})
    precompile(Tuple{typeof(openvideo),IOStream})
    precompile(Tuple{typeof(println),Base.PipeEndpoint,VideoIO.TestVideos.VideoFile{:raw}})
    precompile(Tuple{typeof(pump),VideoIO.AVInput{IOStream}})
    precompile(Tuple{typeof(pump),VideoIO.AVInput{String}})
    precompile(Tuple{typeof(read),VideoIO.VideoReader{true}})
    precompile(Tuple{typeof(seek),VideoIO.AVInput{String},Float64,Float64,Float64,Int64,Bool})
    precompile(Tuple{typeof(seek),VideoIO.VideoReader{true},Float64})
    precompile(Tuple{typeof(seekstart),VideoIO.VideoReader{true}})
    precompile(Tuple{typeof(setindex!),Array{VideoIO.AVUtil.AVRational,1},VideoIO.AVUtil.AVRational,Int64})
    precompile(Tuple{typeof(unsafe_wrap),Type{Array},Ptr{Ptr{VideoIO.AVFormat.AVIOContext}},Int64})
    precompile(Tuple{typeof(unsafe_wrap),Type{Array},Ptr{VideoIO.AVUtil.AVRational},Int64})
    precompile(Tuple{typeof(zero),Type{NTuple{8,Int32}}})
    precompile(Tuple{typeof(zero),Type{NTuple{8,Ptr{UInt8}}}})
    precompile(Tuple{typeof(zero),Type{NTuple{8,Ptr{VideoIO.AVUtil.AVBufferRef}}}})
    precompile(Tuple{typeof(zero),Type{NTuple{8,UInt64}}})
    precompile(Tuple{typeof(zero),Type{VideoIO.AVUtil.AVRational}})
end
