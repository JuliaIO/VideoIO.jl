using BinaryProvider # requires BinaryProvider 0.3.0 or later

# Parse some basic command-line arguments
const verbose = "--verbose" in ARGS
const prefix = Prefix(get([a for a in ARGS if a != "--verbose"], 1, joinpath(@__DIR__, "usr")))
products = [
    LibraryProduct(prefix, ["libfreetype"], :libfreetype),
]

# Download binaries from hosted location
bin_prefix = "https://github.com/JuliaGraphics/FreeTypeBuilder/releases/download/v2.9.1-3"

# Listing of files generated by BinaryBuilder:
download_info = Dict(
    Linux(:aarch64, libc=:glibc) => ("$bin_prefix/FreeType2.v2.9.1.aarch64-linux-gnu.tar.gz", "d673ceec990c754e1342d5e47c3ca99c058f6f76e9e7acd160746cb164bccbd5"),
    Linux(:aarch64, libc=:musl) => ("$bin_prefix/FreeType2.v2.9.1.aarch64-linux-musl.tar.gz", "7b6dfa22712c14fc4bb5c1251080de82d14d0bc7ce1a9c27cb2363c24241e2a5"),
    Linux(:armv7l, libc=:glibc, call_abi=:eabihf) => ("$bin_prefix/FreeType2.v2.9.1.arm-linux-gnueabihf.tar.gz", "23956f5ee66ece3427369bf1a082fc1448ea8d000824af095ef011624113b89f"),
    Linux(:armv7l, libc=:musl, call_abi=:eabihf) => ("$bin_prefix/FreeType2.v2.9.1.arm-linux-musleabihf.tar.gz", "2c82b369058d3bdaf9134de382d6d335d6c86adaa2cc6c5cfd1b9cbb402cfd53"),
    Linux(:i686, libc=:glibc) => ("$bin_prefix/FreeType2.v2.9.1.i686-linux-gnu.tar.gz", "735741ac9af0f428529c661a914abf3dd2e05e8e11960070898f36fc242937ca"),
    Linux(:i686, libc=:musl) => ("$bin_prefix/FreeType2.v2.9.1.i686-linux-musl.tar.gz", "a3b77dd90e9f516c20dd1ac8fccc0deb83419efb5e0706e793975f3cd5653617"),
    Windows(:i686) => ("$bin_prefix/FreeType2.v2.9.1.i686-w64-mingw32.tar.gz", "c1b7486dfb175bed8a7546c0c13222b511f3dbfa21b549088672dd4feee4cf0b"),
    Linux(:powerpc64le, libc=:glibc) => ("$bin_prefix/FreeType2.v2.9.1.powerpc64le-linux-gnu.tar.gz", "bc228aff7411628356a4874957d897f9c5cc83acea596fd2eb85f04a9e9f6f40"),
    MacOS(:x86_64) => ("$bin_prefix/FreeType2.v2.9.1.x86_64-apple-darwin14.tar.gz", "56349bf22254a36510552298311607aa69a797cb180d14f3d82ca94e37a63aa9"),
    Linux(:x86_64, libc=:glibc) => ("$bin_prefix/FreeType2.v2.9.1.x86_64-linux-gnu.tar.gz", "cd62f2fecb0968ae919b78c388bd5de62e8a3e76c9eb51179265d728e6c08cb9"),
    Linux(:x86_64, libc=:musl) => ("$bin_prefix/FreeType2.v2.9.1.x86_64-linux-musl.tar.gz", "5c04849eb8e1da92daa91e56d1e6d8070b8e138ead8d144795b1623b1932eb40"),
    FreeBSD(:x86_64) => ("$bin_prefix/FreeType2.v2.9.1.x86_64-unknown-freebsd11.1.tar.gz", "2813d33369d2ec3bddb667cea43f59a077d993d31f406931ea263f539a466142"),
    Windows(:x86_64) => ("$bin_prefix/FreeType2.v2.9.1.x86_64-w64-mingw32.tar.gz", "5bd02d6bb7c7ee3b8026c6395032d982c57dbbf41d0fd05488614ced7b047457"),
)

# Install unsatisfied or updated dependencies:
unsatisfied = any(!satisfied(p; verbose=verbose) for p in products)
dl_info = choose_download(download_info, platform_key_abi())
if dl_info === nothing && unsatisfied
    # If we don't have a compatible .tar.gz to download, complain.
    # Alternatively, you could attempt to install from a separate provider,
    # build from source or something even more ambitious here.
    error("Your platform (\"$(Sys.MACHINE)\", parsed as \"$(triplet(platform_key_abi()))\") is not supported by this package!")
end

# If we have a download, and we are unsatisfied (or the version we're
# trying to install is not itself installed) then load it up!
if unsatisfied || !isinstalled(dl_info...; prefix=prefix)
    # Download and install binaries
    install(dl_info...; prefix=prefix, force=true, verbose=verbose)
end

# Write out a deps.jl file that will contain mappings for our products
write_deps_file(joinpath(@__DIR__, "deps_codec.jl"), products, verbose=verbose)
